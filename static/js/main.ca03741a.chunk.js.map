{"version":3,"sources":["components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["drums","trigger","keyCode","soundName","soundURL","Audio","MainComponent","props","componentWillUnmount","document","removeEventListener","handleKeyPress","e","state","checked","a","key","toLowerCase","i","setState","active","display","playAudio","setTimeout","play","handleClick","obj","temp","handleChange","bind","addEventListener","this","style","styles","mainComponent","className","id","drumMachine","drumPad","onClick","Button","button1","button","toUpperCase","src","rightCol","power","switch","onChange","uncheckedIcon","checkedIcon","onColor","namePlace","Component","backgroundColor","width","height","flex","justifyContent","alignItems","border","flexDirection","padding","paddingLeft","paddingRight","margin","borderRadius","boxShadow","color","fontSize","marginTop","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ca03741a.chunk.js","sourcesContent":["import React, { Component} from 'react';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Switch from \"react-switch\";\nimport './index.css';\nconst drums = [\n    {\n      trigger: 'q',\n      keyCode: 81,\n      soundName: 'Heater 1',\n      soundURL: new Audio('https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3')\n    }, {\n      trigger: 'w',\n      keyCode: 87,\n      soundName: 'Heater 2',\n      soundURL: new Audio('https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3')\n    }, {\n      trigger: 'e',\n      keyCode: 69,\n      soundName: 'Heater 3',\n      soundURL: new Audio('https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3')\n    }, {\n      trigger: 'a',\n      keyCode: 65,\n      soundName: 'Heater 4',\n      soundURL: new Audio('https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3')\n    }, {\n      trigger: 's',\n      keyCode: 83,\n      soundName: 'Clap',\n      soundURL: new Audio('https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3')\n    }, {\n      trigger: 'd',\n      keyCode: 68,\n      soundName: 'Open HH',\n      soundURL: new Audio('https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3')\n    }, {\n      trigger: 'z',\n      keyCode: 90,\n      soundName: 'Kick N Hat',\n      soundURL: new Audio('https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3')\n    }, {\n      trigger: 'x',\n      keyCode: 88,\n      soundName: 'Kick',\n      soundURL: new Audio('https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3')\n    }, {\n      trigger: 'c',\n      keyCode: 67,\n      soundName: 'Closed HH',\n      soundURL: new Audio('https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3')\n    }\n  ]\n\nclass MainComponent extends Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            checked: true,\n            display:'press a key',\n            active:false,\n            key:''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n    componentWillUnmount = () => {\n        document.removeEventListener('keydown', this.handleKeyPress)\n    }\n    handleChange(checked) {\n        this.setState({ checked });\n    }\n    handleKeyPress=e=>{\n        if(this.state.checked)\n        {\n            var a=e.key.toLowerCase();\n            for(var i=0;i<9;i++)\n            {\n                if(drums[i].trigger===a){\n                    this.setState({active:true,display:drums[i].soundName,key:a});\n                    this.playAudio(drums[i]);\n                    setTimeout(() => {\n                        this.setState(() => ({\n                        active: false,key:''\n                        }))\n                    }, 100);\n                    break;\n                }\n            }\n        }\n    }\n    playAudio = (e) => {\n        // console.log(e);\n        const clip = e.soundURL;\n        // document.inner=console.log(clip);\n        clip.play();\n    }\n    handleClick=(obj)=>{\n        // console.log(obj);\n        let temp={key:obj};\n        this.handleKeyPress(temp);\n    }\n    render() {\n        return (\n            <div style={styles.mainComponent} className=\"container-fluid\">\n                <div id=\"drum-machine\" style={styles.drumMachine}>\n                    <div id=\"display\" className=\"row\" style={styles.display}>\n                        <div>\n                            <h3>DRUM MACHINE</h3>\n                        </div>\n                        <div id=\"drum-pad\" className='col-12 col-lg-8' style={styles.drumPad}>\n                            <div className=\"row\">\n                                <div className=\"col-4 drum-pad\" id=\"audio1\" \n                                    onClick={()=>this.handleClick('q')}>\n                                    <Button style={this.state.key==='q'?styles.button1:styles.button}>Q</Button>\n                                    <audio id={drums[0].trigger.toUpperCase()} className='clip' src={drums[0].soundURL}>\n                                    </audio>\n                                </div>\n                                <div className=\"col-4 drum-pad\" id=\"audio2\"\n                                    onClick={()=>this.handleClick('w')}>\n                                    <Button style={(this.state.key==='w'?styles.button1:styles.button)}>W</Button>\n                                    <audio id={drums[1].trigger.toUpperCase()} className='clip' src={drums[1].soundURL}>\n                                    </audio>\n                                </div>\n                                <div className=\"col-4 drum-pad\" id=\"audio3\"\n                                    onClick={()=>this.handleClick('e')}>\n                                    <Button style={this.state.key==='e'?styles.button1:styles.button}>E</Button>\n                                    <audio id={drums[2].trigger.toUpperCase()} className='clip' src={drums[2].soundURL}>\n                                    </audio>\n                                </div>\n                            </div>\n                            <div className=\"row\" >\n                                <div className=\"col-4 drum-pad\" id=\"audio4\"\n                                    onClick={()=>this.handleClick('a')}>\n                                    <Button style={this.state.key==='a'?styles.button1:styles.button}>A</Button>\n                                    <audio id={drums[3].trigger.toUpperCase()} className='clip' src={drums[3].soundURL}>\n                                    </audio>\n                                </div>\n                                <div className=\"col-4 drum-pad\" id=\"audio5\"\n                                    onClick={()=>this.handleClick('s')}>\n                                    <Button style={this.state.key==='s'?styles.button1:styles.button}>S</Button>\n                                    <audio id={drums[4].trigger.toUpperCase()} className='clip' src={drums[4].soundURL}>\n                                    </audio>\n                                </div>\n                                <div className=\"col-4 drum-pad\" id=\"audio6\"\n                                    onClick={()=>this.handleClick('d')}>\n                                    <Button style={this.state.key==='d'?styles.button1:styles.button}>D</Button>\n                                    <audio id={drums[5].trigger.toUpperCase()} className='clip' src={drums[5].soundURL}>\n                                    </audio>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4 drum-pad\" id=\"audio7\"\n                                    onClick={()=>this.handleClick('z')}>\n                                    <Button style={this.state.key==='z'?styles.button1:styles.button}>Z</Button>\n                                    <audio id={drums[6].trigger.toUpperCase()} className='clip' src={drums[6].soundURL}>\n                                    </audio>\n                                </div>\n                                <div className=\"col-4 drum-pad\" id=\"audio8\"\n                                    onClick={()=>this.handleClick('x')}>\n                                    <Button style={this.state.key==='x'?styles.button1:styles.button}>X</Button>\n                                    <audio id={drums[7].trigger.toUpperCase()} className='clip' src={drums[7].soundURL}>\n                                    </audio>\n                                </div>\n                                <div className=\"col-4 drum-pad\" id=\"audio9\"\n                                    onClick={()=>this.handleClick('c')}>\n                                    <Button style={this.state.key==='c'?styles.button1:styles.button}>C</Button>\n                                    <audio id={drums[8].trigger.toUpperCase()} className='clip' src={drums[8].soundURL}>\n                                    </audio>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-lg-4\" style={styles.rightCol}>\n                            <div className=\"row\" style={styles.power}>\n                                POWER\n                            </div>\n                            <div className=\"row\" style={styles.switch}>\n                                <Switch onChange={this.handleChange}\n                                    checked={this.state.checked} uncheckedIcon={false}\n                                    checkedIcon={false} onColor='#0AA' />\n                            </div>\n                            <br/>\n                            <div className=\"row\" style={styles.namePlace}>\n                                {this.state.display}\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainComponent;\nconst styles={\n    mainComponent:{\n        backgroundColor:\"#8d8d8d\",\n        width:'100vw',\n        height:'100vh',\n        display:'flex',\n        flex:1,\n        justifyContent:'center',\n        alignItems:'center'\n        // fontFamily:'Monospace'\n    },\n    display:{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    drumMachine:{\n        backgroundColor:\"#b3b3b3\",\n        display:'flex',\n        height:'70vh',\n        border:'3px solid orange'\n    },\n    drumPad:{\n        display:'flex',\n        flexDirection: 'column',\n        justifyContent:'center',\n        alignItems:'center'\n    },\n    button:{\n        padding:'2.6vw',\n        paddingLeft:'2.8vw',\n        paddingRight:'2.8vw',\n        backgroundColor:'#8d8d8d',\n        margin:5,\n        borderRadius:15,\n        boxShadow: '5px 5px #000',\n        color:'black'\n    },\n    button1:{\n        padding:'2.6vw',\n        paddingLeft:'2.8vw',\n        paddingRight:'2.8vw',\n        backgroundColor:'orange',\n        margin:5,\n        borderRadius:15,\n        boxShadow: '5px 5px #000',\n        color:'black'\n    },\n   \n    rightCol:{\n        display:'flex',\n        flexDirection: 'column',\n        alignItems:'center',\n        justifyContent:'center',\n        // paddingRight:60\n    },\n    power:{\n        fontSize:30\n    },\n    namePlace:{\n        backgroundColor:'#8d8d8d',\n        fontSize:20,\n        display:'flex',\n        justifyContent:'center',\n        alignItems:'center',\n        padding:10\n    },\n    switch:{\n        marginTop:10\n    }\n};","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport MainComponent from './components/MainComponent';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainComponent/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}